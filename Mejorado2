from Puzzle1 import Puzzle1
import gi
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk, Pango

class Ventana(Gtk.Window):
  def __init__(self):
    #inicializar
    Gtk.Window.__init__(self, title= "LCD")
    self.set_default_size(286, 170)
    #Crear y a침adir contenedor
    self.contenedor = Gtk.Box(orientation=Gtk.Orientation.VERTICAL, spacing=6)
    self.add(self.contenedor)
    #Crear un TextView
    self.textview = Gtk.TextView()
    self.textview.set_wrap_mode(Gtk.WrapMode.NONE)
    self.textview.set_size_request(200,80) #20x4
    #Establecer una fuente Monospaced
    fuente = Pango.FontDescription.from_string("monospace 18")
    self.textview.modify_font(fuente)
    #Obtener el buffer que ir치 al LCD
    self.buffer = self.textview.get_buffer()
    self.textview.connect("size-allocate", self.TamanyFixe)
    self.contenedor.pack_start(self.textview, True, True, 0)
    #Crear Bot칩n
    self.boton = Gtk.Button(label="Display")
    self.boton.connect("clicked", self.Imprimir_LCD)
    self.contenedor.pack_start(self.boton, False, False, 0)

  def TamanyFixe(self, widget, allocation):
    widget.set_size_request(200,80)

  def Imprimir_LCD(self,widget):
    inicio_iter = self.buffer.get_start_iter()
    fin_iter = self.buffer.get_end_iter()
    contenido = self.buffer.get_text(inicio_iter, fin_iter, False)
    print(contenido) #Era para comprobar si el bot칩n funcionaba, se puede mantener o quitar, no afecta.
    contenidolisto = contenido.replace('\n', '')
    ObjetoP1 = Puzzle1()
    ObjetoP1.Imprimir(contenidolisto)

ventana = Ventana()
ventana.connect("destroy", Gtk.main_quit)
ventana.show_all()
Gtk.main()
